name: Ubuntu VNC Server

on:
  workflow_dispatch:

jobs:
  ubuntu-vnc:
    runs-on: ubuntu-24.04
    timeout-minutes: 3600

    steps:
      - name: Update APT
        run: sudo apt-get update

      - name: Prevent service auto-start during apt
        run: |
          # Block service starts during apt installs to avoid hangs in non-systemd CI
          echo -e '#!/bin/sh\nexit 101' | sudo tee /usr/sbin/policy-rc.d >/dev/null
          sudo chmod +x /usr/sbin/policy-rc.d

      - name: Disable systemctl hooks
        run: |
          set -e
          # Divert and replace systemctl, deb-systemd-invoke, service with no-op to avoid postinst hangs
          sudo dpkg-divert --local --rename --add /usr/bin/systemctl || true
          echo -e '#!/bin/sh\nexit 0' | sudo tee /usr/bin/systemctl >/dev/null
          sudo chmod +x /usr/bin/systemctl

          sudo dpkg-divert --local --rename --add /usr/sbin/deb-systemd-invoke || true
          echo -e '#!/bin/sh\nexit 0' | sudo tee /usr/sbin/deb-systemd-invoke >/dev/null
          sudo chmod +x /usr/sbin/deb-systemd-invoke

          sudo dpkg-divert --local --rename --add /usr/sbin/service || true
          echo -e '#!/bin/sh\nexit 0' | sudo tee /usr/sbin/service >/dev/null
          sudo chmod +x /usr/sbin/service

      - name: Pre-create system users and directories
        run: |
          set -e
          # Ensure system groups exist
          getent group colord >/dev/null || sudo groupadd --system colord
          getent group gnome-remote-desktop >/dev/null || sudo groupadd --system gnome-remote-desktop
          getent group speech-dispatcher >/dev/null || sudo groupadd --system speech-dispatcher

          # Ensure system users exist and bound to their groups
          id -u colord >/dev/null 2>&1 || sudo adduser --system --home /var/lib/colord --shell /usr/sbin/nologin --ingroup colord colord
          id -u gnome-remote-desktop >/dev/null 2>&1 || sudo adduser --system --home /var/lib/gnome-remote-desktop --shell /usr/sbin/nologin --ingroup gnome-remote-desktop gnome-remote-desktop
          id -u speech-dispatcher >/dev/null 2>&1 || sudo adduser --system --home /var/lib/speech-dispatcher --shell /usr/sbin/nologin --ingroup speech-dispatcher speech-dispatcher

          # Create home/state dirs with correct ownership
          sudo mkdir -p /var/lib/colord /var/lib/gnome-remote-desktop /var/lib/speech-dispatcher
          sudo chown colord:colord /var/lib/colord || true
          sudo chown gnome-remote-desktop:gnome-remote-desktop /var/lib/gnome-remote-desktop || true
          sudo chown speech-dispatcher:speech-dispatcher /var/lib/speech-dispatcher || true
          sudo chmod 0755 /var/lib/colord /var/lib/gnome-remote-desktop /var/lib/speech-dispatcher || true

          # Ensure NetworkManager connections directory exists for tools that expect it
          sudo mkdir -p /etc/NetworkManager/system-connections
          sudo chmod 700 /etc/NetworkManager/system-connections

      - name: Install Desktop and VNC Server
        run: |
          export DEBIAN_FRONTEND=noninteractive
          sudo apt-get -yq install ubuntu-desktop-minimal gnome-session gnome-shell ubuntu-session gnome-terminal tigervnc-standalone-server netcat-openbsd curl x11-xserver-utils xauth dbus-x11 xorg xserver-xorg-core xserver-xorg-input-all xserver-xorg-video-dummy x11-apps policykit-1 colord speech-dispatcher



      - name: Validate system users and tmpfiles
        run: |
          # Ensure sysusers and tmpfiles are applied post-install
          sudo systemd-sysusers
          sudo systemd-tmpfiles --create

      - name: Re-enable service start
        run: |
          # Allow services to start again after install
          sudo rm -f /usr/sbin/policy-rc.d



      - name: Configure VNC Server
        run: |
          mkdir -p ~/.vnc
          PASS=$(tr -dc 'A-Za-z0-9!@#$%^&*' </dev/urandom | head -c 16)
          echo "$PASS" | vncpasswd -f > ~/.vnc/passwd
          chmod 600 ~/.vnc/passwd
          echo "VNC_PASSWORD=$PASS" >> "$GITHUB_ENV"
          
          # Create GNOME startup script
          cat > ~/.vnc/xstartup << 'EOF'
          #!/bin/bash
          unset SESSION_MANAGER
          unset DBUS_SESSION_BUS_ADDRESS
          [ -r "$HOME/.Xresources" ] && xrdb "$HOME/.Xresources"
          export XDG_SESSION_TYPE=x11
          export GDK_BACKEND=x11
          export QT_QPA_PLATFORM=xcb
          exec dbus-launch /usr/bin/gnome-session --session=gnome
          EOF
          chmod +x ~/.vnc/xstartup
          
          # Kill existing VNC processes
          vncserver -kill :0 || true
          
          # Start VNC server
          vncserver :0 -localhost no -geometry 1280x800 -depth 24 -xstartup ~/.vnc/xstartup

      - name: Install Tailscale
        run: curl -fsSL https://tailscale.com/install.sh | sh

      - name: Start tailscaled (manual)
        run: |
          # Start tailscaled in background while systemctl hooks are disabled
          sudo mkdir -p /var/run
          nohup sudo tailscaled >/tmp/tailscaled.log 2>&1 &
          sleep 3

      - name: Connect to Tailscale
        run: |
          sudo tailscale up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }} --hostname=gh-runner-${GITHUB_RUN_ID}
          TSIP=$(tailscale ip -4)
          if [ -z "$TSIP" ]; then
            echo "Tailscale IP not assigned. Exiting."
            exit 1
          fi
          echo "TAILSCALE_IP=$TSIP" >> "$GITHUB_ENV"

      - name: Restore systemctl hooks
        run: |
          set -e
          # Restore original binaries from diversion
          if sudo dpkg-divert --list | grep -q '/usr/bin/systemctl'; then
            sudo rm -f /usr/bin/systemctl
            sudo dpkg-divert --local --rename --remove /usr/bin/systemctl
          fi
          if sudo dpkg-divert --list | grep -q '/usr/sbin/deb-systemd-invoke'; then
            sudo rm -f /usr/sbin/deb-systemd-invoke
            sudo dpkg-divert --local --rename --remove /usr/sbin/deb-systemd-invoke
          fi
          if sudo dpkg-divert --list | grep -q '/usr/sbin/service'; then
            sudo rm -f /usr/sbin/service
            sudo dpkg-divert --local --rename --remove /usr/sbin/service
          fi

      - name: Verify VNC Connection
        run: |
          echo "Tailscale IP: $TAILSCALE_IP"
          if ! nc -z -v "$TAILSCALE_IP" 5900; then
            echo "TCP connection to VNC port 5900 failed"
            exit 1
          fi
          echo "TCP connectivity successful!"

      - name: Keep Connection Alive
        run: |
          echo "=== VNC ACCESS INFORMATION ==="
          echo "Address: ${TAILSCALE_IP}:5900"
          echo "Password: ${VNC_PASSWORD}"
          echo "Desktop: GNOME"
          echo "=============================="
          while true; do
            echo "[$(date)] VNC Active - Cancel workflow to terminate"
            sleep 300
          done
